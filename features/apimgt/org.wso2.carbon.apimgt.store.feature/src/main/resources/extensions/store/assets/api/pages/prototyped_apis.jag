<%
/*
 *  Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */
var caramel;
require('/modules/store.js').exec(function (ctx) {
    caramel = require('caramel');
    var log = new Log('prototyped_apis');
    var ui = require('rxt').ui;
    var asset = require('rxt').asset;
    var uriMatcher = new URIMatcher(ctx.request.getRequestURI());
    var options = uriMatcher.match('/{context}/assets/{type}/{pageName}');
    var type = options.type;
    var tenantId=-1234;
    var am = asset.createAnonAssetManager(ctx.session, type, tenantId);
    var page = ui.buildPage(ctx.session, ctx.request);
    var output = am.renderBasic(page)._custom();

    var server = require('store').server;
    var username='_wso2.am.anon_';
    var user;
    user = {};
    var constants = require("rxt").constants;
    user.username = username;
    user.superTenantDomain = constants.MultitenantConstants.SUPER_TENANT_DOMAIN_NAME;

    var apistore = require('apistore').apistore.instance(user);

    var prototypedAPIsOutput = apistore.getAllPaginatedAPIsByStatus("carbon.super", 0, 10, "PROTOTYPED");
    prototypedAPIsOutput = JSON.parse(prototypedAPIsOutput);
    output.prototyped_apis_length = JSON.parse(prototypedAPIsOutput['totalLength']);
    output.prototyped_apis_list = JSON.parse(prototypedAPIsOutput['prototypedAPIList']);
    output.prototyped_apis_is_more = JSON.parse(prototypedAPIsOutput['isMore']);
    output.prototyped_api_type = "api";

    caramel.render(output);
}, request, response, session);
%>
