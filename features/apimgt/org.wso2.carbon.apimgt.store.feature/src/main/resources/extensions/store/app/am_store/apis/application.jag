<%
/*
 *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */
require('/modules/store.js').exec(function (ctx) {
    var log = new Log();
    var res = ctx.response;
    var req = ctx.request;
    var session = ctx.session;

    var server = require('store').server;
    var user = server.current(ctx.session);
    var apistore = require('apistore').apistore.instance(user.username);
    var options = request.getAllParameters('UTF-8');
    var httpMethod = request.getMethod();
    res.contentType = 'application/json';

    var API_SUBSCRIPTION_URL = '/{context}/apis/application/{appName}/subscriptions';

    var uriMatcher = new URIMatcher(req.getRequestURI());
    uriMatcher.match(API_SUBSCRIPTION_URL);
    switch (httpMethod) {
        case 'GET':
            log.info('GET :: ' + httpMethod);
            var elements = uriMatcher.elements();
            options.appName = elements.appName;
            var subscribedAPIsResult = apistore.getAllSubscriptions(user.username,options.appName,0,100);
            var subscribedAPIs = [];
            subscribedAPIs = JSON.parse(subscribedAPIsResult);
            //log.info('Application.jag -- JSON.parse(subscribedAPIsResult) :: ' + subscribedAPIsResult);
            //print(subscribedAPIs);
            break;

        case 'POST':
            log.info('POST :: ' + httpMethod);
            if (uriMatcher.match(API_SUBSCRIPTION_URL)) {
                var elements = uriMatcher.elements();
                options.appName = elements.appName;
                //(userId, applicationName, tokenType, tokenScope) 
                var check = apistore.createApplicationKeys(user.username, options.appName, 'Production', 'default');
                log.info('Application.jag-- apistore.createApplicationKeys:: ' + check);

            }
            break;

        default:
            log.info('default :: ' + httpMethod);
            break;
    }

}, request, response, session);
%>