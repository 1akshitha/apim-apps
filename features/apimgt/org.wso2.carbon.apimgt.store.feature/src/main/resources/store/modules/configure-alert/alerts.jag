<%
var getStoreAlertConfigs  = function () {
    var log = new Log();

    try {
        var APIUtil = org.wso2.carbon.apimgt.impl.utils.APIUtil;
        var tenantAwareUserName = jagg.getUser().username;
        //TODO add subscriber name to query
        var appName = "APIM_ALERT_CONFIGURATION"; 
        var query =  "from ApiSubscriberAlertConfiguration select applicationId ,apiName , apiVersion , thresholdRequestCountPerMin;";
        var objArr = [];

        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);

        if(result != null ) {
            var parsedDataResult = JSON.parse(result);

            if(parsedDataResult.records != null) {
                var items = parsedDataResult.records;
                for (var i = 0; i < items.length; i ++){
                    var record = items[i];
                    var obj = {
                        "applicationId": record[0],
                        "apiName" : record[1],
                        "apiVersion" : record[2],
                        "thresholdRequestCountPerMin":record[3]
                    }

                    objArr.push(obj);
                }
            }
        }

        return objArr;
    } catch (e) {
        log.error(e.message);
        return {
            error:true
        };
    }
};

var addOrUpdateStoreAlertConfigs  = function (applicationId, apiName, apiVersion, thresholdRequestCountPerMin) {
    var log = new Log();

    try {
        var APIUtil = org.wso2.carbon.apimgt.impl.utils.APIUtil;
        var tenantAwareUserName = jagg.getUser().username;
        //TODO add subscriber name to query
        var appName = "APIM_ALERT_CONFIGURATION";
        var query =  "select '" + applicationId + "' as applicationId, '" + apiName + "' as apiName, '" 
                     + apiVersion + "' as apiVersion, " + parseInt(thresholdRequestCountPerMin) 
                     + " as thresholdRequestCountPerMin update or insert into ApiSubscriberAlertConfiguration " 
                     + "set ApiSubscriberAlertConfiguration.thresholdRequestCountPerMin = thresholdRequestCountPerMin "
                     + "on ApiSubscriberAlertConfiguration.applicationId == applicationId and " 
                     + "ApiSubscriberAlertConfiguration.apiName == apiName and ApiSubscriberAlertConfiguration.apiVersion == apiVersion";

        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
        var objArr = [];
        if(result != null ) {
            var parsedDataResult = JSON.parse(result);
            objArr = parsedDataResult;
        }
        return objArr;
    } catch (e) {
        log.error(e.message);
        return {
            error:true,
            message: e.message
        };
    }


};

var deleteStoreAlertConfigs  = function (applicationId, apiName, apiVersion) {
    var log = new Log();
        
    try {
        var APIUtil = org.wso2.carbon.apimgt.impl.utils.APIUtil;
        var tenantAwareUserName = jagg.getUser().username;
        //TODO add subscriber name to query
        var appName = "APIM_ALERT_CONFIGURATION"; 
        var query =  "delete ApiSubscriberAlertConfiguration on ApiSubscriberAlertConfiguration.applicationId == '" 
                     + applicationId + "' and ApiSubscriberAlertConfiguration.apiName == '"
                     + apiName + "' and ApiSubscriberAlertConfiguration.apiVersion == '"+apiVersion+"'";
        var result = APIUtil.executeQueryOnStreamProcessor(appName, query);
        var objArr = [];
        if(result != null ) {
            var parsedDataResult = JSON.parse(result);
            objArr = parsedDataResult;
        }
        return objArr;
    } catch (e) {
        log.error(e.message);
        return {
            error:true
        };
    }
};
%>
