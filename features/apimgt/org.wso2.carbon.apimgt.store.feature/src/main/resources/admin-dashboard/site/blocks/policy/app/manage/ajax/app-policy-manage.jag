<%
include("/jagg/jagg.jag");

(function () {
    response.contentType = "application/json; charset=UTF-8";
    var mod, result, obj,
    action = request.getParameter("action"),
    site = require("/site/conf/site.json"),
    msg = require("/site/conf/ui-messages.jag");

    if(jagg.getUser() == null){
        print({
            error:true,
            message:'timeout'
        });        
    } else if (request.getMethod() == 'POST') {
        if (action == "deleteAppPolicy" ) {
            mod = jagg.module("policy");
            result = mod.deleteAppPolicy(request.getParameter("policy", "UTF-8"));
            if (result.error) {
                obj = {
                    error:true,
                    message:msg.error.backendError(action) + ". Reason : " + result.message
                };
            } else {
                obj = {
                    error:false,
                    response:result.valid
                }
            }
            print(obj);
        } /*else if (action == "getAllAppPolicies" ) {
            mod = jagg.module("policy");
            result = mod.getAllAppPolicies();
	    var appPolicyArray = result.appPolicies;
	    //var appPolicyListSize  = result.appPolicies.size();
	    var count = 0;

	    var appPolicyList = [];
	    for(j = 0; j < appPolicyArray.length; j++) {
			var appPolicyObj = {};
			var appPolicy = appPolicyArray[j];
		        var policyName = appPolicy.getName();
                var policyLevel = appPolicy.getPolicyLevel();
                var description = appPolicy.getDescription();
                var defaultQuotaPolicy = appPolicy.getDefaultQuotaPolicy();
                var tenantId = appPolicy.getTenantId();

		        var tierPlan, stopOnQuotaReach;
		        var displayStatus = "No";

		        tierPlan = tier.getTierPlan() == null ? "" : tier.getTierPlan();
		        description = tier.getDescription() == null ? "" : tier.getDescription();

		        stopOnQuotaReach = tier.isStopOnQuotaReached();
		        if("true".equalsIgnoreCase(stopOnQuotaReach)){
		            displayStatus = "Yes";
		        }
            appPolicy.policyName=policyName
            appPolicyList.push(appPolicyObj);
		}
            if (result.error) {
                obj = {
                    error:true,
                    message:msg.error.backendError(action) + ". Reason : " + result.message
                };
            } else {
                obj = {
                    error:false,
                    response:appPolicyList
                }
            }
            print(obj);
        }*/
    }
 }());  
%>
