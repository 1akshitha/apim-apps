<%
include("/jagg/jagg.jag");

(function () {
     
    response.contentType = "application/json; charset=UTF-8";
    var mod, obj, result,
            action = request.getParameter("action"),
            site = require("/site/conf/site.json"),
            msg = require("/site/conf/ui-messages.jag")
    allProviders = "__all_providers__";
    if (jagg.getUser() == null) {
        print({
            error: true,
            message: 'timeout'
        });
    } else {
        if (action === "getDataFromAlertTable") {
            mod = jagg.module("alerts");
            var provider = jagg.getUser().username;
            var tableName = request.getParameter("tableName");
            var count = parseInt(request.getParameter("entriesPerPage"));
            var searchEntry = request.getParameter("searchQuery");
            var startindex =  parseInt(request.getParameter("startIndex"));

            result = mod.getDataFromAlertTable(tableName, searchEntry, startindex, count);
             
            if (result.error == "true") {
                obj = {
                    error: result.error,
                    message: msg.error.backendError(action)
                };
            } else {
                obj = {
                    error: false,
                    values: JSON.parse(result)
                }
            }
            print(obj);
            
        } else if(action === "getCountFromAlertTable"){
                mod = jagg.module("alerts");
                var provider = jagg.getUser().username;
                var tableName = request.getParameter("tableName");
                var searchEntry = request.getParameter("searchQuery");

                result = mod.getCountFromAlertTable(tableName, searchEntry);

                if (result.error == "true") {
                    obj = {
                        error: result.error,
                        message: msg.error.backendError(action)
                    };
                } else {
                    obj = {
                        error: false,
                        values: JSON.parse(result)
                    }

                 }
            print(obj);

        }
            else {
                print({
                    error: true,
                    message: msg.error.invalidAction(action)
                });
            }
    }
}());
%>