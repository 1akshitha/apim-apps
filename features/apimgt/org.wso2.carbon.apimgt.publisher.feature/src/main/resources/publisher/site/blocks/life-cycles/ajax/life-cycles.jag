<%
include("/jagg/jagg.jag");

if(jagg.isCSRFTokenValid())
(function () {
    response.contentType = "text/plain; charset=UTF-8";
    var mod, obj, result, username,
            action = request.getParameter("action"),
            site = require("/site/conf/site.json"),
            msg = require("/site/conf/ui-messages.jag");
    if (jagg.getUser() == null) {
        print({
                  error:true,
                  message:'AuthenticateError'
              });
    } else {
    if (action === "updateStatus" && request.getMethod() == 'POST') {
        mod = jagg.module("api");
        var apiData = {};
        apiData.provider= request.getParameter("provider","UTF-8");
        apiData.apiName = request.getParameter("name","UTF-8");
        apiData.version = request.getParameter("version");
        // Need a mapping to map the state to the LC transition event
        var status = request.getParameter("status");
        if(status == "PUBLISHED") {
            status = "Publish";
        } else if (status == "CREATED") {
            status = "Demote to Created";
        } else if (status == "DEPRECATED") {
            status = "Deprecate";
        } else if (status == "BLOCKED") {
            status = "Block";
        } else if (status == "RETIRED") {
            status = "Retire";
        }
        apiData.status =  status;              

        var result=mod.updateAPIStatus(apiData);
        var lcs = mod.getLifeCyclesEvents({provider:request.getParameter("provider"),name:request.getParameter("name"),
        															version:request.getParameter("version")}).lcs;

     	if (result.error == true) {
            obj = {
                error:true,
                message:result.message
            };
        } else {
            obj = {
                error:false,
                lcs:lcs
            }
        }
        print(obj);

    } else if (action === "isAPIOlderVersionExist") {
        mod = jagg.module("api");
        var apiData = {};
        apiData.provider= request.getParameter("provider");
        apiData.name = request.getParameter("name");
        apiData.version = request.getParameter("version");
        result = mod.isAPIOlderVersionExist(apiData);
        if (result.error==true) {
            obj = {
                error:true,
                message:result.message
            };
        } else {
            obj = result;
        }
        print(obj);

    }else if (action === "setCheckListItemVal") {
             mod = jagg.module("api");
             var apiData = {};
             apiData.provider= request.getParameter("provider");
             apiData.name = request.getParameter("name");
             apiData.version = request.getParameter("version");
             var checkListItemOrder=request.getParameter("order");
             var checkListItemVal=request.getParameter("value");  
             if(checkListItemVal=='true'){
             checkListItemVal=true;
             } else{
             checkListItemVal=false;
             }        
             result = mod.setCheckListItemVal(apiData,checkListItemOrder,checkListItemVal);
             if (!result) {
                 obj = {
                     error:true,
                     message:result.message
                 };
             } else {
                 obj = { error:false };
             }
             print(obj);

    }else {
        print({
                  error:true,
                  message:msg.error.invalidAction(action)
              });
    }
    }
}());
%>
