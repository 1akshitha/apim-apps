# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Internal Utility API
  description: This API allows you to access internal data.
  version: "1.0.0"
# the domain of the service
host: apim.wso2.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /throttle:
    get:
      summary: throttled events available
      description: |
        This will provide access to throttled events in database.
      parameters:
        - name : query
          in: query
          description: |
            **Search condition**.

            You can search for an application by specifying the name as "query" attribute.

            Eg.
            "app1" will match an application if the name is exactly "app1".

            Currently this does not support wildcards. Given name must exactly match the application name.
          type: string
      tags:
        - Throttling
      responses:
        200:
          description: An array of Throttle Events
          schema:
            type: array
            items:
              $ref: '#/definitions/ThrottledEvent'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /throttleAsString:
    get:
      summary: throttled events available
      description: |
        This will provide access to throttled events in database.
      parameters:
        - name : query
          in: query
          description: |
            **Search condition**.

            You can search for an application by specifying the name as "query" attribute.

            Eg.
            "app1" will match an application if the name is exactly "app1".

            Currently this does not support wildcards. Given name must exactly match the application name.
          type: string
      tags:
        - Throttling
      responses:
        200:
          description: throttle events string
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /isThrottled:
    get:
      summary: throttled events available
      description: |
        This will provide access to throttled events in database.
      parameters:
        - name : query
          in: query
          description: |
            **Search condition**.

            You can search for an application by specifying the name as "query" attribute.

            Eg.
            "app1" will match an application if the name is exactly "app1".

            Currently this does not support wildcards. Given name must exactly match the application name.
          type: string
      tags:
        - Throttling
      responses:
        200:
          description: Throttle Event
          schema:
            $ref: '#/definitions/ThrottledEvent'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /block:
    get:
      summary: blocking events available
      description: |
        This will provide access to throttled events in database.
      tags:
        - Throttling
      responses:
        200:
          description: Block Conditions
          schema:
            type: object
            additionalProperties:
              $ref: "#/definitions/BlockConditions"

  /keyTemplates:
    get:
      summary: An Array of key templates according to custom policies
      description: |
        This will provide access to key templates define in custom policies
      responses:
        200:
          description: An array of Key Templates
          schema:
            type: array
            items:
              type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /revokedjwt:
    get:
      summary: JTIs of revoked jwt tokens
      description: |
        This will provide access to JTIs of revoked JWT tokens in database.
      responses:
        200:
          description: An array of revoke JWTs
          schema:
            type: array
            items:
              $ref: '#/definitions/RevokedJWTList'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /apikey/revoke:
    post:
      summary: Revoke given API Key
      description: Revoke and notify the provided API Key
      parameters:
        - in: body
          name: body
          description: |
            API Key revoke request object
          schema:
            $ref: '#/definitions/RevokeAPIKey'
      responses:
        200:
          description: |
            OK.
            Api key revoked successfully.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /apis:
    get:
      summary: Get all apis
      description: |
        This will provide access to apis in database.
      parameters:
        - $ref: '#/parameters/requestedTenant'
      tags:
      - Subscription Validation
      responses:
        200:
          description: An array of APIs in the database
          schema:
            type: array
            items:
              $ref: '#/definitions/API'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /applications:
    get:
      summary: Get all applications
      description: |
        This will provide access to applications in database.
      parameters:
        - $ref: '#/parameters/requestedTenant'
      tags:
      - Subscription Validation
      responses:
        200:
          description: An array of applications in the database
          schema:
            type: array
            items:
              $ref: '#/definitions/Application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /subscriptions:
    get:
      summary: Get all subscriptions
      description: |
         This will provide access to subscriptions in database.
      parameters:
        - $ref: '#/parameters/requestedTenant'
      tags:
        - Subscription Validation
      responses:
        200:
          description: An array of subscriptions in the database
          schema:
            type: array
            items:
              $ref: '#/definitions/Subscription'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /subscribers:
    get:
      summary: Get all subscribers
      description: |
         This will provide access to subscribers in database.
      parameters:
        - $ref: '#/parameters/requestedTenant'
      tags:
        - Subscription Validation
      responses:
        200:
          description: An array of subscribers in the database
          schema:
            type: array
            items:
              $ref: '#/definitions/Subscriber'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /application-key-mappings:
    get:
      summary: Get all application key mappings
      description: |
        This will provide access to application vs key mappings in database.
      parameters:
        - $ref: '#/parameters/requestedTenant'
      tags:
        - Subscription Validation
      responses:
        200:
          description: An array of application key mappings in the database
          schema:
            type: array
            items:
              $ref: '#/definitions/ApplicationKeyMapping'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /subscription-policies:
    get:
      summary: Get all subscription throttling policies
      description: |
        This will provide access to subscription level throttling policies in database.
      parameters:
        - $ref: '#/parameters/requestedTenant'
      tags:
        - Subscription Validation
      responses:
        200:
          description: An array of subscription policies in the database
          schema:
            type: array
            items:
              $ref: '#/definitions/SubscriptionPolicy'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /application-policies:
    get:
      summary: Get all application throttling policies
      description: |
        This will provide access to application level throttling policies in database.
      parameters:
        - $ref: '#/parameters/requestedTenant'
      tags:
        - Subscription Validation
      responses:
        200:
          description: An array of application policies in the database
          schema:
            type: array
            items:
              $ref: '#/definitions/ApplicationPolicy'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /apis/{apiId}:
    get:
      summary: Get the API
      description: |
        This will provide access to api in database.
      parameters:
        - $ref: '#/parameters/apiId'
      tags:
      - Subscription Validation
      responses:
        200:
          description: The API in the database
          schema:
            type: string
            items:
              $ref: '#/definitions/API'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /applications/{applicationId}:
    get:
      summary: Get an application
      description: |
        This will provide access to application in database.
      parameters:
        - $ref: '#/parameters/applicationId'
      tags:
      - Subscription Validation
      responses:
        200:
          description: Application in the database
          schema:
            type: object
            items:
              $ref: '#/definitions/Application'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /subscriptions/{subscriptionId}:
    get:
      summary: Get a subscription
      description: |
         This will provide access to subscription in database.
      parameters:
        - $ref: '#/parameters/subscriptionId'
      tags:
        - Subscription Validation
      responses:
        200:
          description: A subscription in the database
          schema:
            type: object
            items:
              $ref: '#/definitions/Subscription'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /application-key-mappings/{consumerKey}:
    get:
      summary: Get an application key mapping
      description: |
        This will provide access to application vs key mapping in database.
      parameters:
        - $ref: '#/parameters/consumerKey'
      tags:
        - Subscription Validation
      responses:
        200:
          description: An application key mapping in the database
          schema:
            type: object
            items:
              $ref: '#/definitions/ApplicationKeyMapping'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /subscription-policies/{policyId}:
    get:
      summary: Get all subscription throttling policies
      description: |
        This will provide access to subscription level throttling policy in database.
      parameters:
        - $ref: '#/parameters/policyId'
      tags:
        - Subscription Validation
      responses:
        200:
          description: The subscription policy in the database
          schema:
            type: object
            items:
              $ref: '#/definitions/SubscriptionPolicy'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /application-policies/{policyId}:
    get:
      summary: Get all application throttling policies
      description: |
        This will provide access to application level throttling policy in database.
      parameters:
        - $ref: '#/parameters/policyId'
      tags:
        - Subscription Validation
      responses:
        200:
          description: The application policy in the database
          schema:
            type: object
            items:
              $ref: '#/definitions/ApplicationPolicy'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
######################################################
# Parameters - required by some of the APIs above
######################################################
parameters:

  requestedTenant:
    name: X-WSO2-Tenant
    in: header
    description: |
      This is used to specify the tenant domain, where the resource need to be
        retirieved from.
    required: true
    type: string

  # API Identifier
  # Specified as part of the path expression
  apiId:
    name: apiId
    in: path
    description: |
      **API ID** consisting of the **UUID** of the API.
    required: true
    type: integer

  # Application Identifier
  # Specified as part of the path expression
  applicationId:
    name: applicationId
    in: path
    description: |
      Application Identifier consisting of the UUID of the Application.
    required: true
    type: integer

  # Subscription Identifier
  # Specified as part of the path expression
  subscriptionId:
    name: subscriptionId
    in: path
    description: |
      Subscription Id
    required: true
    type: integer

  # Policy Id
  # Specified as part of the path expression
  policyId:
    name: policyId
    in: path
    description: |
      Policy Id represented as a UUID
    required: true
    type: integer

  subscrberId:
    name: subscriberId
    in: path
    description: |
      **Subscriber ID** consisting of the **ID** of Subscriber.
    required: true
    type: integer

  consumerKey:
    name: consumerKey
    in: path
    description: |
      **key** consisting of the ***Consumer Key* of an application key mapping.
    required: true
    type: string

######################################################################
# The resources used by some of the APIs above within the message body
######################################################################
definitions:
  ThrottledEvent:
    properties:
      throttle_key:
        type: string
        description: throttle key.
      last_updated_time:
        type: string
        description: Last time decision updated.
      throttle_state:
        type: string
        description: throttle state.

  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

  BlockConditions:
    properties:
      api:
        type: array
        items:
          type: string
      application:
        type: array
        items:
          type: string
      ip:
        type: array
        items:
          $ref: '#/definitions/IPLevel'
      user:
        type: array
        items:
          type: string
      custom:
        type: array
        items:
          type: string
  RevokedJWTList:
    type: array
    items:
      $ref: '#/definitions/RevokedJWT'
  RevokedJWT:
    properties:
      jwt_signature:
        type: string
        description: signature of the JWT token.
      expiry_time:
        type: integer
        format: int64
        description: expiry timestamp.
  RevokeAPIKey:
    properties:
      apiKey:
        type: string
        description: API Key token.
      expiryTime:
        type: integer
        format: int64
        description: expiry timestamp.
      tenantId:
        type: integer
        format: int64
        description: expiry timestamp.
  IPLevel:
    properties:
      type:
        type: string
        example: iprange
      fixedIp:
        type: string
        description: IP address.
      startingIp:
        type: string
        description: Ip Range Starting IP
      endingIp:
        type: string
        description: Ip Range Ending IP.
      invert:
        type: boolean
        description: Condition is invert.
      tenantDomain:
        type: string
      id:
        type: integer

  #-----------------------------------------------------
  # The API resource
  #-----------------------------------------------------
  API:
    properties:
      apiId:
        type: integer
      provider:
        type: string
        description: API Provider name.
      name:
        type: string
        description: Name of the API
      version:
        type: string
        description: Version of the API.
      context:
        type: string
        description: Context of the API.
      policy:
        type: string
        description: API level throttling policy.

  #-----------------------------------------------------
  # The Application resource
  #-----------------------------------------------------
  Application:
    properties:
      id:
        type: integer
      name:
        type: string
      subId:
        type: integer
      policy:
        type: string
        description: Application level throtting policy.
      tokenType:
        type: string
        description: type of the token.
        example: JWT

  #-----------------------------------------------------
  # The Subscription resource
  #-----------------------------------------------------
  Subscription:
    properties:
      subscriptionId:
        type: integer
      policyId:
        type: string
      apiId:
        type: integer
      appId:
        type: integer
      subscriptionState:
        type: string

  #-----------------------------------------------------
  # The Subscriber resource
  #-----------------------------------------------------
  Subscriber:
    properties:
      tenantId:
        type: integer
      subscriberId:
        type: integer

  #-----------------------------------------------------
  # The Application Key Mapping resource
  #-----------------------------------------------------
  ApplicationKeyMapping:
    properties:
        applicationId:
          type: integer
        consumerKey:
          type: string
        keyType:
          type: string

  #---------------------  --------------------------------
  # The Throttle Policy resource
  #-----------------------------------------------------
  Policy:
    properties:
      id:
        type: integer
      tenantId:
        type: integer
      name:
        type: string
      quotaType:
        type: string

  #-----------------------------------------------------
  # The Subscription Level Policy resource
  #-----------------------------------------------------
  SubscriptionPolicy:
    allOf:
    - $ref: '#/definitions/Policy'
    properties:
      rateLimitCount:
        type: integer
      rateLimitTimeUnit:
        type: string
      stopOnQuotaReach:
        type: boolean

  #-----------------------------------------------------
  # The Application Level Policy resource
  #-----------------------------------------------------
  ApplicationPolicy:
    allOf:
    - $ref: '#/definitions/Policy'

  #-----------------------------------------------------
  # The Throttle Policy Condition resource
  #-----------------------------------------------------
  Condition:
    properties:
      conditionType:
        type: string
      name:
        type: string
      value:
        type: string
      isInverted:
        type: boolean
